<!-- Form -->
<div class="lg:pl-20 bg-white rounded-md m-10">
  <h1 class="text-xl lg:text-4xl text-center lg:text-start font-bold mb-12 pt-5">Set schedulling for Device</h1>
  <form id="formPostSchedule" action="/postSchedule" method="post">
    <div class="mb-6 mr-4 ml-4">
      <!-- Device name input -->
      <label for="deviceName" class="text-lg font-bold">Device Name</label>
      <input
        id="deviceName"
        type="text"
        name="deviceName"
        class="form-control block w-full px-4 py-2 text-xl font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none"
        required />

      <!-- Topic for schedulling input -->
      <label for="topicSchedule" class="text-lg font-bold">Topic for schedulling</label>
      <input
        id="topicSchedule"
        type="text"
        name="topicSchedule"
        class="form-control block w-full px-4 py-2 text-xl font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none"
        required />

      <label for="deviceKey" class="text-lg font-bold">Device key</label>
      <input
        id="deviceKey"
        type="text"
        name="deviceKey"
        class="form-control block w-full px-4 py-2 text-xl font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none"
        required />

      <!-- Schedule on input -->
      <label class="text-lg font-bold">ON</label>
      <input
        id="on"
        name="on"
        type="time"
        class="form-control block w-full px-4 py-2 text-xl font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none"
        required />

      <!-- Schedule off input -->
      <label class="text-lg font-bold">OFF</label>
      <input
        id="off"
        name="off"
        type="time"
        class="form-control block w-full px-4 py-2 text-xl font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none"
        required />
    </div>

    <!-- Submit button -->
    <div class="mx-auto grid justify-items-center space-y-3 pb-8">
      <button
        id="submitSchedule"
        type="submit"
        class="form-control px-7 py-3 bg-green-600 text-white font-medium text-sm leading-snug uppercase rounded-full shadow-md hover:bg-green-700 hover:shadow-lg focus:bg-green-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-green-800 active:shadow-lg transition duration-150 ease-in-out w-3/4">
        Submit
      </button>
    </div>
  </form>
</div>

<script>
  // Module Elements
  const deviceName = document.getElementById("deviceName");
  const topicSchedule = document.getElementById("topicSchedule");
  const deviceKey = document.getElementById("deviceKey");
  const on = document.getElementById("on");
  const off = document.getElementById("off");

  async function postSchedule() {
    try {
      const response = await fetch("/postSchedule", {
        method: "POST",
        mode: "cors",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          deviceName: deviceName.value,
          topicSchedule: topicSchedule.value,
          deviceKey: deviceKey.value,
          on: on.value,
          off: off.value,
        }),
      });
      const datas = await response.json();
      if (datas.statusText === "OK") {
        document.getElementById("msg").innerHTML = datas.message;
        document.getElementById("modalBody").classList.add("bg-green-200");
        document.getElementById("modalBody").classList.remove("bg-red-200");
        modal.classList.toggle("-translate-y-40");
        setTimeout(() => {
          modal.classList.toggle("-translate-y-40");
        }, 2000);
      } else {
        document.getElementById("msg").innerHTML = datas.message;
        document.getElementById("modalBody").classList.remove("bg-green-200");
        document.getElementById("modalBody").classList.add("bg-red-200");
        modal.classList.toggle("-translate-y-40");
        setTimeout(() => {
          modal.classList.toggle("-translate-y-40");
        }, 2000);
      }
    } catch (e) {
      console.log(e);
    }
  }

  // Form
  const form = document.getElementById("formPostSchedule");
  console.log(form);
  form.addEventListener("submit", (e) => {
    e.preventDefault();
    postSchedule();
  });
</script>
